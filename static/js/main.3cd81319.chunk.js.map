{"version":3,"sources":["components/Container/Container.js","components/Navigation.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/UserMenu.js","components/AuthNav.js","components/AppBar.js","views/HomeView.js","views/RegisterView.js","views/LoginView.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","views/ContactsView.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css"],"names":["Container","children","className","styles","container","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","to","exact","style","activeStyle","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","console","log","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","authOperations","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","name","alignItems","avatar","marginRight","UserMenu","dispatch","useDispatch","useSelector","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","minHeight","title","fontSize","textAlign","HomeView","INITIAL_VALUES","email","password","RegisterView","validate","useCallback","values","errors","test","handleSubmit","setSubmitting","marginLeft","width","initialValues","onSubmit","touched","handleChange","handleBlur","isSubmitting","autoComplete","TextField","fullWidth","id","label","value","onChange","onBlur","error","Boolean","helperText","Button","variant","disabled","Object","keys","length","LoginView","ContactForm","useState","setName","number","setNumber","form","marginBottom","e","preventDefault","pattern","required","currentTarget","Filter","ContactList","contacts","onDelete","map","contact","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contactsOperations","fetchContacts","contactsActions","message","addContact","deleteContact","contactId","delete","getFilter","filter","getAllContacts","items","contactsSelectors","getFilteredContacts","toLowerCase","includes","ContactsView","filteredContacts","useEffect","alert","PrivateRoute","Component","component","rest","render","props","PublicRoute","App","path","createReducer","payload","contactsReducer","combineReducers","authReducer","createSlice","initialState","extraReducers","fulfilled","action","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","persistReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3cd81319.chunk.js","sourcesContent":["import styles from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nconst Navigation = () => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Home\n    </NavLink>\n\n    <NavLink\n      to=\"/contacts\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Contacts\n    </NavLink>\n  </nav>\n);\n\nexport default Navigation;\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = createAsyncThunk(\"auth/register\", async (credentials) => {\n  try {\n    //console.log(\"credentials=\", credentials);\n    const { data } = await axios.post(\"/users/signup\", credentials);\n    //console.log(\"data=\", data);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(\"error=\", error);\n  }\n});\n\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\n  try {\n    //console.log(\"credentials=\", credentials);\n    const { data } = await axios.post(\"/users/login\", credentials);\n    //console.log(\"data=\", data);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(\"error=\", error);\n  }\n});\n\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\n  try {\n    await axios.post(\"/users/logout\");\n    token.unset();\n  } catch (error) {}\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      //console.log(\"No token found, escape from fetchCurrentUser\");\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get(\"/users/current\");\n      return data;\n    } catch (error) {}\n  }\n);\n\nconst authOperations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default authOperations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n};\nexport default authSelectors;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport authOperations from \"../redux/auth/auth-operations\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n//import defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\n/*\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n*/\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  //  const avatar = defaultAvatar;\n\n  return (\n    <div style={styles.container}>\n      <span style={styles.name}>Hello, {name}</span>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Logout\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Register\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Login\n      </NavLink>\n    </div>\n  );\n}\n\nexport default AuthNav;\n","import { useSelector } from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport UserMenu from \"./UserMenu\";\nimport AuthNav from \"./AuthNav\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nconst styles = {\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid #2A363B\",\n  },\n};\n\nconst AppBar = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n};\n\nexport default AppBar;\n","import React from 'react';\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: 'center',\n  },\n};\n\n/*\n      <span role=\"img\" aria-label=\"Иконка приветствия\">\n        💁‍♀️\n      </span>\n*/\n\nconst HomeView = () => (\n  <div style={styles.container}>\n    <h1 style={styles.title}>\n      Welcome page of the service{' '}\n    </h1>\n  </div>\n);\n\nexport default HomeView;\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n//import { Link } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport authOperations from \"../redux/auth/auth-operations\";\r\n\r\n//npm i @material-ui/core\r\n//npm install formik\r\n\r\nconst INITIAL_VALUES = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst RegisterView = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const validate = useCallback((values) => {\r\n    const errors = {};\r\n    if (!values.name) {\r\n      errors.name = \"Required\";\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n    return errors;\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    (values, { setSubmitting }) => {\r\n      //console.log(values);\r\n      /*\r\n      setTimeout(() => {\r\n        //alert(JSON.stringify(values, null, 2));\r\n        setSubmitting(false);\r\n      }, 400);\r\n      */\r\n      setSubmitting(false);\r\n      dispatch(authOperations.register(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <div style={{ marginLeft: \"40px\", width: \"400px\" }}>\r\n      <h1>Registration</h1>\r\n      <Formik\r\n        initialValues={INITIAL_VALUES}\r\n        validate={validate}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleSubmit,\r\n          handleBlur,\r\n          isSubmitting,\r\n        }) => {\r\n          //console.log(values, errors, touched);\r\n          return (\r\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n              <TextField\r\n                fullWidth\r\n                id=\"name\"\r\n                name=\"name\"\r\n                label=\"Name\"\r\n                type=\"text\"\r\n                value={values.name}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.name && Boolean(errors.name)}\r\n                helperText={touched.name && errors.name}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                id=\"email\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.email && Boolean(errors.email)}\r\n                helperText={touched.email && errors.email}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                error={touched.password && Boolean(errors.password)}\r\n                helperText={touched.password && errors.password}\r\n              />\r\n\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                fullWidth\r\n                type=\"submit\"\r\n                disabled={\r\n                  isSubmitting ||\r\n                  !(\r\n                    Object.keys(touched).length ===\r\n                      Object.keys(INITIAL_VALUES).length &&\r\n                    Object.keys(errors).length === 0\r\n                  )\r\n                }\r\n              >\r\n                Submit\r\n              </Button>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n//import { Link } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport authOperations from \"../redux/auth/auth-operations\";\r\n\r\n//npm i @material-ui/core\r\n//npm install formik\r\n\r\nconst INITIAL_VALUES = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst LoginView = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const validate = useCallback((values) => {\r\n    const errors = {};\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n    return errors;\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    (values, { setSubmitting }) => {\r\n      //console.log(values);\r\n      /*\r\n      setTimeout(() => {\r\n        setSubmitting(false);\r\n      }, 400);\r\n      */\r\n      setSubmitting(false);\r\n      dispatch(authOperations.logIn(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <div style={{ marginLeft: \"40px\", width: \"400px\" }}>\r\n      <h1>Login</h1>\r\n      <Formik\r\n        initialValues={INITIAL_VALUES}\r\n        validate={validate}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleSubmit,\r\n          handleBlur,\r\n          isSubmitting,\r\n        }) => {\r\n          //console.log(values, errors, touched);\r\n          return (\r\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n              <TextField\r\n                fullWidth\r\n                id=\"email\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.email && Boolean(errors.email)}\r\n                helperText={touched.email && errors.email}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                error={touched.password && Boolean(errors.password)}\r\n                helperText={touched.password && errors.password}\r\n              />\r\n\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                fullWidth\r\n                type=\"submit\"\r\n                disabled={\r\n                  isSubmitting ||\r\n                  !(\r\n                    Object.keys(touched).length ===\r\n                      Object.keys(INITIAL_VALUES).length &&\r\n                    Object.keys(errors).length === 0\r\n                  )\r\n                }\r\n              >\r\n                Submit\r\n              </Button>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={styles.form}\r\n      style={{ marginBottom: \"32px\" }}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state.name, this.state.number);\r\n        onSubmit(name, number);\r\n        reset();\r\n      }}\r\n    >\r\n      <p>Name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={(e) => {\r\n          //console.log(\"name\", e.currentTarget.value);\r\n          setName(e.currentTarget.value);\r\n        }}\r\n      />\r\n\r\n      <p>Number</p>\r\n      <input\r\n        type=\"tel\"\r\n        value={number}\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        onChange={(e) => {\r\n          //console.log(\"number\", e.currentTarget.value);\r\n          setNumber(e.currentTarget.value);\r\n        }}\r\n      />\r\n      <div>\r\n        <br />\r\n        <button type=\"submit\">Add contact</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","//import styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Filter({ onChange }) {\r\n  return (\r\n    <div>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => {\r\n          //console.log(e.currentTarget.value);\r\n          onChange(e.currentTarget.value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","//import styles from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => {\r\n        return (\r\n          <li key={contact.id}>\r\n            {contact.name} {contact.number}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                onDelete(contact.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from \"axios\";\nimport * as contactsActions from \"./contacts-actions\";\n\n// GET @ /contacts\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(contactsActions.fetchContactsRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    //console.log(\"data#1=\", data);\n    dispatch(contactsActions.fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.fetchContactsError(error.message));\n  }\n};\n\n// POST @ /contacts\nconst addContact = (contact) => async (dispatch) => {\n  dispatch(contactsActions.addContactRequest());\n  try {\n    //console.log(\"contact#2=\", contact);\n    const { data } = await axios.post(\"/contacts\", contact);\n    //console.log(\"data#2=\", data);\n    dispatch(contactsActions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.addContactError(error.message));\n  }\n};\n\n// DELETE @ /contacts/:id\nconst deleteContact = (contactId) => async (dispatch) => {\n  dispatch(contactsActions.deleteContactRequest());\n  try {\n    //console.log(\"contactId#3=\", contactId);\n    /*const { data } =*/ await axios.delete(`/contacts/${contactId}`);\n    //console.log(\"data#3=\", data);\n    dispatch(contactsActions.deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(contactsActions.deleteContactError(error.message));\n  }\n};\n\nconst contactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\nexport default contactsOperations;\n","//import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getFilter = (state) => state.contacts.filter;\n\nconst getAllContacts = (state) => state.contacts.items;\n\n/*\nconst getFilteredContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    console.log(\"contacts=\", contacts, \" filter=\", filter);\n    return contacts.filter((contact) =>\n      contact.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n*/\nconst getFilteredContacts = (state) => {\n  const contacts = getAllContacts(state);\n  const filter = getFilter(state);\n  //console.log(\"contacts=\", contacts, \" filter=\", filter);\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nconst contactsSelectors = {\n  getFilter,\n  getAllContacts,\n  getFilteredContacts,\n};\nexport default contactsSelectors;\n","import React, { /*useState,*/ useEffect } from \"react\";\r\n//import \"./App.css\";\r\n//import { v4 as uuidv4 } from \"uuid\";\r\nimport { useSelector, useDispatch /*, connect*/ } from \"react-redux\";\r\nimport Container from \"../components/Container\";\r\nimport ContactForm from \"../components/ContactForm/ContactForm.js\";\r\nimport Filter from \"../components/Filter/Filter.js\";\r\nimport ContactList from \"../components/ContactList/ContactList.js\";\r\nimport * as contactsActions from \"../redux/contacts/contacts-actions\";\r\nimport contactsOperations from \"../redux/contacts/contacts-operations\";\r\nimport contactsSelectors from \"../redux/contacts/contacts-selectors\";\r\n\r\nfunction ContactsView(/*{ contacts, filteredContacts }*/) {\r\n  const contacts = useSelector(contactsSelectors.getAllContacts);\r\n  const filteredContacts = useSelector(contactsSelectors.getFilteredContacts);\r\n  //const filter = useSelector((state) => state.filter);\r\n  //const [filter, setFilter] = useState(() => { return \"\"; });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const onAddContact = (name, number) => {\r\n    const selectedContact = contacts.filter((contact) => {\r\n      return contact.name === name;\r\n    });\r\n    if (selectedContact.length > 0) {\r\n      alert(name + \" is already in contacts\");\r\n    } else {\r\n      dispatch(\r\n        contactsOperations.addContact({ /*id: uuidv4(),*/ name, number })\r\n      );\r\n    }\r\n  };\r\n\r\n  const onDeleteContact = (contactId) => {\r\n    dispatch(contactsOperations.deleteContact(contactId));\r\n  };\r\n\r\n  const onChangeFilter = (filter) => {\r\n    dispatch(contactsActions.changeFilter(filter));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={onAddContact} />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter onChange={onChangeFilter} />\r\n      <ContactList contacts={filteredContacts} onDelete={onDeleteContact} />\r\n    </Container>\r\n  );\r\n}\r\n\r\n//const mapStateToProps = (state) => ({\r\n//  contacts: getContacts(state),\r\n//  filteredContacts: getFilteredContacts(state),\r\n//});\r\n\r\n//export default connect(mapStateToProps, null)(ContactsView);\r\n\r\nexport default ContactsView;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport { PrivateRoute };\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport { PublicRoute };\r\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Container from \"./components/Container/Container\";\nimport AppBar from \"./components/AppBar\";\nimport HomeView from \"./views/HomeView\";\nimport RegisterView from \"./views/RegisterView\";\nimport LoginView from \"./views/LoginView\";\nimport ContactsView from \"./views/ContactsView\";\nimport authOperations from \"./redux/auth/auth-operations\";\nimport { PrivateRoute } from \"./components/PrivateRoute\";\nimport { PublicRoute } from \"./components/PublicRoute\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n\n      <Switch>\n        <Route component={HomeView} exact path=\"/\" />\n        <PublicRoute component={RegisterView} path=\"/register\" />\n        <PublicRoute component={LoginView} path=\"/login\" />\n        <PrivateRoute component={ContactsView} path=\"/contacts\" />\n      </Switch>\n    </Container>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as contactsActions from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [contactsActions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [contactsActions.addContactSuccess]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  [contactsActions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  items,\n  filter,\n});\n\nexport default contactsReducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport authOperations from \"./auth-operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n      //state = initialState;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nconst authReducer = authSlice.reducer;\n\nexport default authReducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\nimport authReducer from \"./auth/auth-slice\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n//import 'modern-normalize/modern-normalize.css';\nimport './styles/base.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__36VH0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__20hZk\"};"],"sourceRoot":""}