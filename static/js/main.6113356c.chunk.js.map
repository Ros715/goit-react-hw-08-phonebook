{"version":3,"sources":["components/ContactForm/ContactForm.module.css","redux/contacts-selectors.js","redux/contacts-api.js","redux/actions.js","redux/operations.js","components/Navbar/Navbar.js","components/Register/Register.js","components/Login/Login.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Contacts/Contacts.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","getContacts","state","contacts","getLoggedIn","loggedIn","getFilteredContacts","createSelector","filter","contact","name","toLowerCase","includes","axios","defaults","baseURL","token","headers","common","Authorization","login","credentials","a","post","data","logout","register","console","log","fetchContacts","get","addContact","deleteContact","contactId","delete","loginRequest","createAction","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","registerRequest","registerSuccess","registerError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","dispatch","contactsActions","contactsApi","Navbar","useDispatch","useSelector","to","onClick","styles","form","width","label","display","flexDirection","marginBottom","Register","onSubmit","useState","email","setEmail","setName","password","setPassword","style","className","e","preventDefault","type","value","required","onChange","currentTarget","Login","ContactForm","number","setNumber","pattern","title","Filter","ContactList","onDelete","map","id","connect","filteredContacts","useEffect","selectedContact","length","alert","uuidv4","contactsOperations","App","path","component","Contacts","createReducer","action","payload","rootReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6113356c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__20hZk\"};","/*\r\nnpm install reselect\r\n*/\r\nimport { createSelector } from \"reselect\";\r\n\r\nexport const getContacts = (state) => state.contacts;\r\n\r\nexport const getFilter = (state) => state.filter;\r\n\r\nexport const getLoggedIn = (state) => state.loggedIn;\r\n\r\n/* version without reselection:\r\nexport const getFilteredContacts = (state) => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n};\r\n*/\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);\r\n","/*\r\nnpm install axios\r\nnpm install -g json-server\r\njson-server --watch db.json\r\n*/\r\n\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\n/*------- authorization -----------*/\r\n\r\nexport const token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\ntoken.unset();\r\n\r\nexport async function login(credentials) {\r\n  const { data } = await axios.post(\"/users/login\", credentials);\r\n  return data;\r\n}\r\n\r\nexport async function logout() {\r\n  const { data } = await axios.post(\"/users/logout\");\r\n  return data;\r\n}\r\n\r\nexport const register = async (credentials) => {\r\n  console.log(\"credentials=\", credentials);\r\n  const { data } = await axios.post(\"/users/signup\", credentials);\r\n  console.log(\"return=\", data);\r\n  return data;\r\n};\r\n\r\n/*------- contacts -----------*/\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(\"/contacts\");\r\n  return data;\r\n}\r\n\r\nexport async function addContact(contact) {\r\n  const { data } = await axios.post(`/contacts`, contact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(contactId) {\r\n  const { data } = await axios.delete(`/contacts/${contactId}`);\r\n  return data;\r\n}\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n//import { types } from \"./actions-types\";\r\n\r\n/*------- authorization -----------*/\r\n\r\nexport const loginRequest = createAction(\"login/request\");\r\nexport const loginSuccess = createAction(\"login/success\");\r\nexport const loginError = createAction(\"login/error\");\r\n\r\nexport const logoutRequest = createAction(\"logout/request\");\r\nexport const logoutSuccess = createAction(\"logout/success\");\r\nexport const logoutError = createAction(\"logout/error\");\r\n\r\nexport const registerRequest = createAction(\"register/request\");\r\nexport const registerSuccess = createAction(\"register/success\");\r\nexport const registerError = createAction(\"register/error\");\r\n\r\n/*------- contacts -----------*/\r\n\r\nexport const fetchContactsRequest = createAction(\"fetchContacts/request\");\r\nexport const fetchContactsSuccess = createAction(\"fetchContacts/success\");\r\nexport const fetchContactsError = createAction(\"fetchContacts/error\");\r\n\r\nexport const addContactRequest = createAction(\"addContact/request\");\r\nexport const addContactSuccess = createAction(\"addContact/success\");\r\nexport const addContactError = createAction(\"addContact/error\");\r\n\r\nexport const deleteContactRequest = createAction(\"deleteContact/request\");\r\nexport const deleteContactSuccess = createAction(\"deleteContact/success\");\r\nexport const deleteContactError = createAction(\"deleteContact/error\");\r\n\r\nexport const changeFilter = createAction(\"changeFilter\");\r\n","import * as contactsApi from \"./contacts-api\";\r\nimport * as contactsActions from \"./actions\";\r\n//import axios from \"axios\";\r\n\r\n/*------- authorization -----------*/\r\n\r\nexport const login = (credentials) => async (dispatch) => {\r\n  /*{email,password}*/\r\n  dispatch(contactsActions.loginRequest());\r\n  try {\r\n    const { data } = await contactsApi.login();\r\n    contactsApi.token.set(data.token);\r\n    dispatch(contactsActions.loginSuccess(credentials));\r\n  } catch (error) {\r\n    dispatch(contactsActions.loginError(error));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch(contactsActions.logoutRequest());\r\n  try {\r\n    await contactsApi.logout();\r\n    dispatch(contactsActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(contactsActions.logoutError(error));\r\n  }\r\n};\r\n\r\nexport const register = (credentials) => async (dispatch) => {\r\n  /*{name,email,password}*/\r\n  dispatch(contactsActions.registerRequest());\r\n  try {\r\n    const { data } = await contactsApi.register(credentials);\r\n    console.log(\"data=\", data);\r\n    contactsApi.token.set(data.token);\r\n    dispatch(contactsActions.registerSuccess(credentials));\r\n  } catch (error) {\r\n    console.log(\"error type=\", typeof error);\r\n    console.log(\"error=\", error);\r\n    //dispatch(contactsActions.registerError(error));\r\n  }\r\n};\r\n\r\n/*---------------- contacts --------------*/\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n  try {\r\n    const contacts = await contactsApi.fetchContacts();\r\n    dispatch(contactsActions.fetchContactsSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(contactsActions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (contact) => async (dispatch) => {\r\n  dispatch(contactsActions.addContactRequest(contact));\r\n  try {\r\n    /*const contacts =*/ await contactsApi.addContact(contact);\r\n    dispatch(contactsActions.addContactSuccess(contact));\r\n  } catch (error) {\r\n    dispatch(contactsActions.addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = (contactId) => async (dispatch) => {\r\n  dispatch(contactsActions.deleteContactRequest(contactId));\r\n  try {\r\n    /*const contacts =*/ await contactsApi.deleteContact(contactId);\r\n    dispatch(contactsActions.deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(contactsActions.deleteContactError(error));\r\n  }\r\n};\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getLoggedIn } from \"../../redux/contacts-selectors\";\r\nimport { logout } from \"../../redux/operations\";\r\n\r\nfunction Navbar() {\r\n  const dispatch = useDispatch();\r\n  const loggedIn = useSelector(getLoggedIn);\r\n\r\n  return (\r\n    <div>\r\n      {!loggedIn && (\r\n        <div>\r\n          <Link to=\"/login\">Login</Link>\r\n          <Link to=\"/register\">Register</Link>\r\n        </div>\r\n      )}\r\n      {loggedIn && (\r\n        <div>\r\n          <button onClick={dispatch(logout)}>Logout</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\n//import styles from \"./Register.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nfunction Register({ onSubmit }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const reset = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      style={styles.form}\r\n      className={styles.form}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state.name, this.state.number);\r\n        onSubmit(email, name, password);\r\n        reset();\r\n      }}\r\n    >\r\n      <label style={styles.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          required\r\n          onChange={(e) => {\r\n            //console.log(\"name\", e.currentTarget.value);\r\n            setName(e.currentTarget.value);\r\n          }}\r\n        />\r\n      </label>\r\n\r\n      <label style={styles.label}>\r\n        Email\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          required\r\n          onChange={(e) => {\r\n            //console.log(\"name\", e.currentTarget.value);\r\n            setEmail(e.currentTarget.value);\r\n          }}\r\n        />\r\n      </label>\r\n\r\n      <label style={styles.label}>\r\n        Password\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"password\"\r\n          required\r\n          onChange={(e) => {\r\n            //console.log(\"number\", e.currentTarget.value);\r\n            setPassword(e.currentTarget.value);\r\n          }}\r\n        />\r\n      </label>\r\n      <div>\r\n        <br />\r\n        <button type=\"submit\">Register</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nRegister.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Login({ onSubmit }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const reset = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={styles.form}\r\n      style={{ marginBottom: \"32px\" }}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state.name, this.state.number);\r\n        onSubmit(email, password);\r\n        reset();\r\n      }}\r\n    >\r\n      <p>Email</p>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={email}\r\n        required\r\n        onChange={(e) => {\r\n          //console.log(\"name\", e.currentTarget.value);\r\n          setEmail(e.currentTarget.value);\r\n        }}\r\n      />\r\n\r\n      <p>Password</p>\r\n      <input\r\n        type=\"password\"\r\n        value={password}\r\n        name=\"password\"\r\n        required\r\n        onChange={(e) => {\r\n          //console.log(\"number\", e.currentTarget.value);\r\n          setPassword(e.currentTarget.value);\r\n        }}\r\n      />\r\n      <div>\r\n        <br />\r\n        <button type=\"submit\">Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nLogin.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={styles.form}\r\n      style={{ marginBottom: \"32px\" }}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state.name, this.state.number);\r\n        onSubmit(name, number);\r\n        reset();\r\n      }}\r\n    >\r\n      <p>Name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={(e) => {\r\n          //console.log(\"name\", e.currentTarget.value);\r\n          setName(e.currentTarget.value);\r\n        }}\r\n      />\r\n\r\n      <p>Number</p>\r\n      <input\r\n        type=\"tel\"\r\n        value={number}\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        onChange={(e) => {\r\n          //console.log(\"number\", e.currentTarget.value);\r\n          setNumber(e.currentTarget.value);\r\n        }}\r\n      />\r\n      <div>\r\n        <br />\r\n        <button type=\"submit\">Add contact</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","//import styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Filter({ onChange }) {\r\n  return (\r\n    <div>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => {\r\n          //console.log(e.currentTarget.value);\r\n          onChange(e.currentTarget.value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","//import styles from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => {\r\n        return (\r\n          <li key={contact.id}>\r\n            {contact.name} {contact.number}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                onDelete(contact.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { /*useState,*/ useEffect } from \"react\";\r\nimport ContactForm from \"../ContactForm/ContactForm.js\";\r\nimport Filter from \"../Filter/Filter.js\";\r\nimport ContactList from \"../ContactList/ContactList.js\";\r\n//import \"./App.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { /*useSelector,*/ useDispatch, connect } from \"react-redux\";\r\nimport * as contactsActions from \"../../redux/actions\";\r\nimport * as contactsOperations from \"../../redux/operations\";\r\nimport {\r\n  getContacts,\r\n  getFilteredContacts,\r\n} from \"../../redux/contacts-selectors\";\r\n\r\nfunction Contacts({ contacts, filteredContacts }) {\r\n  //const contacts = useSelector(getContacts);\r\n  //const filter = useSelector((state) => state.filter);\r\n  //const [filter, setFilter] = useState(() => { return \"\"; });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const onAddContact = (name, number) => {\r\n    const selectedContact = contacts.filter((contact) => {\r\n      return contact.name === name;\r\n    });\r\n    if (selectedContact.length > 0) {\r\n      alert(name + \" is already in contacts\");\r\n    } else {\r\n      dispatch(contactsOperations.addContact({ id: uuidv4(), name, number }));\r\n    }\r\n  };\r\n\r\n  const onDeleteContact = (contactId) => {\r\n    dispatch(contactsOperations.deleteContact(contactId));\r\n  };\r\n\r\n  const onChangeFilter = (filter) => {\r\n    dispatch(contactsActions.changeFilter(filter));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={onAddContact} />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter onChange={onChangeFilter} />\r\n      <ContactList contacts={filteredContacts} onDelete={onDeleteContact} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n  filteredContacts: getFilteredContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Contacts);\r\n","import React, { /*useState,*/ useEffect } from \"react\";\r\nimport Navbar from \"./components/Navbar/Navbar.js\";\r\nimport Register from \"./components/Register/Register.js\";\r\nimport Login from \"./components/Login/Login.js\";\r\nimport Contacts from \"./components/Contacts/Contacts.js\";\r\nimport \"./App.css\";\r\nimport { Switch, Route, BrowserRouter, NavLink, Link } from \"react-router-dom\";\r\nimport { /*useSelector,*/ useDispatch, connect } from \"react-redux\";\r\nimport * as contactsOperations from \"./redux/operations\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const onRegister = (email, name, password) => {\r\n    dispatch(contactsOperations.register({ name, email, password }));\r\n  };\r\n\r\n  const onLogin = (email, password) => {\r\n    dispatch(contactsOperations.login({ name: \"\", email, password }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/register\">\r\n            <Register onSubmit={onRegister} />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login onSubmit={onLogin} />\r\n          </Route>\r\n          <Route path=\"/contacts\" component={Contacts} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as contactsActions from \"./actions\";\r\n\r\nconst contacts = createReducer([], {\r\n  [contactsActions.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [contactsActions.addContactSuccess]: (state, action) => [\r\n    ...state,\r\n    action.payload,\r\n  ],\r\n  [contactsActions.deleteContactSuccess]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nconst loggedIn = createReducer(false, {\r\n  [contactsActions.loginSuccess]: (state, action) => true,\r\n  [contactsActions.loginError]: (state, action) => false,\r\n  [contactsActions.registerSuccess]: (state, action) => true,\r\n  [contactsActions.registerError]: (state, action) => false,\r\n  [contactsActions.logoutSuccess]: (state, action) => false,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts,\r\n  filter,\r\n  loggedIn,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { store } from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n//import { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}