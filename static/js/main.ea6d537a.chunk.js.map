{"version":3,"sources":["components/Container/Container.js","components/Navigation.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/UserMenu.js","components/AuthNav.js","components/AppBar.js","views/HomeView.js","views/RegisterView.js","views/LoginView.js","views/ContactsView.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js","components/Container/Container.module.css"],"names":["Container","children","className","styles","container","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","to","exact","style","activeStyle","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","console","log","post","data","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","authOperations","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","name","alignItems","avatar","marginRight","UserMenu","dispatch","useDispatch","useSelector","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","minHeight","title","fontSize","textAlign","HomeView","INITIAL_VALUES","email","password","RegisterView","validate","useCallback","values","errors","test","handleSubmit","setSubmitting","setTimeout","marginLeft","width","initialValues","onSubmit","touched","handleChange","handleBlur","isSubmitting","autoComplete","TextField","fullWidth","id","label","value","onChange","onBlur","error","Boolean","helperText","Button","variant","disabled","Object","keys","length","LoginView","ContactsView","PrivateRoute","Component","component","rest","render","props","PublicRoute","App","useEffect","path","fetchContactsSuccess","createAction","addContactSuccess","deleteContactSuccess","changeFilter","items","createReducer","payload","filter","contactsReducer","combineReducers","authReducer","createSlice","initialState","extraReducers","fulfilled","action","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","persistReducer","contacts","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ea6d537a.chunk.js","sourcesContent":["import styles from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nconst Navigation = () => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Home\n    </NavLink>\n\n    <NavLink\n      to=\"/contacts\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Contacts\n    </NavLink>\n  </nav>\n);\n\nexport default Navigation;\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = createAsyncThunk(\"auth/register\", async (credentials) => {\n  try {\n    console.log(\"credentials=\", credentials);\n    const { data } = await axios.post(\"/users/signup\", credentials);\n    console.log(\"data=\", data);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(\"error=\", error);\n  }\n});\n\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\n  try {\n    console.log(\"credentials=\", credentials);\n    const { data } = await axios.post(\"/users/login\", credentials);\n    console.log(\"data=\", data);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(\"error=\", error);\n  }\n});\n\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\n  try {\n    await axios.post(\"/users/logout\");\n    token.unset();\n  } catch (error) {}\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      console.log(\"No token found, escape from fetchCurrentUser\");\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get(\"/users/current\");\n      return data;\n    } catch (error) {}\n  }\n);\n\nconst authOperations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default authOperations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n};\nexport default authSelectors;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport authOperations from \"../redux/auth/auth-operations\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n//import defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\n/*\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n*/\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  //  const avatar = defaultAvatar;\n\n  return (\n    <div style={styles.container}>\n      <span style={styles.name}>Hello, {name}</span>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Logout\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Register\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Login\n      </NavLink>\n    </div>\n  );\n}\n\nexport default AuthNav;\n","import { useSelector } from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport UserMenu from \"./UserMenu\";\nimport AuthNav from \"./AuthNav\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nconst styles = {\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid #2A363B\",\n  },\n};\n\nconst AppBar = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n};\n\nexport default AppBar;\n","import React from 'react';\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: 'center',\n  },\n};\n\n/*\n      <span role=\"img\" aria-label=\"Иконка приветствия\">\n        💁‍♀️\n      </span>\n*/\n\nconst HomeView = () => (\n  <div style={styles.container}>\n    <h1 style={styles.title}>\n      Welcome page of the service{' '}\n    </h1>\n  </div>\n);\n\nexport default HomeView;\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n//import { Link } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport authOperations from \"../redux/auth/auth-operations\";\r\n\r\n//npm i @material-ui/core\r\n//npm install formik\r\n\r\nconst INITIAL_VALUES = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst RegisterView = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const validate = useCallback((values) => {\r\n    const errors = {};\r\n    if (!values.name) {\r\n      errors.name = \"Required\";\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n    return errors;\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    (values, { setSubmitting }) => {\r\n      //console.log(values);\r\n      setTimeout(() => {\r\n        //alert(JSON.stringify(values, null, 2));\r\n        setSubmitting(false);\r\n      }, 400);\r\n      dispatch(authOperations.register(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <div style={{ marginLeft: \"40px\", width: \"400px\" }}>\r\n      <h1>Registration</h1>\r\n      <Formik\r\n        initialValues={INITIAL_VALUES}\r\n        validate={validate}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleSubmit,\r\n          handleBlur,\r\n          isSubmitting,\r\n        }) => {\r\n          //console.log(values, errors, touched);\r\n          return (\r\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n              <TextField\r\n                fullWidth\r\n                id=\"name\"\r\n                name=\"name\"\r\n                label=\"Name\"\r\n                type=\"text\"\r\n                value={values.name}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.name && Boolean(errors.name)}\r\n                helperText={touched.name && errors.name}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                id=\"email\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.email && Boolean(errors.email)}\r\n                helperText={touched.email && errors.email}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                error={touched.password && Boolean(errors.password)}\r\n                helperText={touched.password && errors.password}\r\n              />\r\n\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                fullWidth\r\n                type=\"submit\"\r\n                disabled={\r\n                  isSubmitting ||\r\n                  !(\r\n                    Object.keys(touched).length ===\r\n                      Object.keys(INITIAL_VALUES).length &&\r\n                    Object.keys(errors).length === 0\r\n                  )\r\n                }\r\n              >\r\n                Submit\r\n              </Button>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n//import { Link } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport authOperations from \"../redux/auth/auth-operations\";\r\n\r\n//npm i @material-ui/core\r\n//npm install formik\r\n\r\nconst INITIAL_VALUES = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst LoginView = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const validate = useCallback((values) => {\r\n    const errors = {};\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n    return errors;\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    (values, { setSubmitting }) => {\r\n      //console.log(values);\r\n      setTimeout(() => {\r\n        //alert(JSON.stringify(values, null, 2));\r\n        setSubmitting(false);\r\n      }, 400);\r\n      dispatch(authOperations.logIn(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <div style={{ marginLeft: \"40px\", width: \"400px\" }}>\r\n      <h1>Login</h1>\r\n      <Formik\r\n        initialValues={INITIAL_VALUES}\r\n        validate={validate}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleSubmit,\r\n          handleBlur,\r\n          isSubmitting,\r\n        }) => {\r\n          //console.log(values, errors, touched);\r\n          return (\r\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n              <TextField\r\n                fullWidth\r\n                id=\"email\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.email && Boolean(errors.email)}\r\n                helperText={touched.email && errors.email}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                error={touched.password && Boolean(errors.password)}\r\n                helperText={touched.password && errors.password}\r\n              />\r\n\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                fullWidth\r\n                type=\"submit\"\r\n                disabled={\r\n                  isSubmitting ||\r\n                  !(\r\n                    Object.keys(touched).length ===\r\n                      Object.keys(INITIAL_VALUES).length &&\r\n                    Object.keys(errors).length === 0\r\n                  )\r\n                }\r\n              >\r\n                Submit\r\n              </Button>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import Container from '../components/Container';\r\n\r\nconst ContactsView = () => {\r\n\treturn (\r\n\t  <Container>\r\n\t\t<h1>ContactsView</h1>\r\n\t  </Container>\r\n\t);\r\n}\r\n\r\nexport default ContactsView;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport { PrivateRoute };\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport { PublicRoute };\r\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch /*, Route*/ } from \"react-router-dom\";\nimport Container from \"./components/Container/Container\";\nimport AppBar from \"./components/AppBar\";\nimport HomeView from \"./views/HomeView\";\nimport RegisterView from \"./views/RegisterView\";\nimport LoginView from \"./views/LoginView\";\nimport ContactsView from \"./views/ContactsView\";\nimport authOperations from \"./redux/auth/auth-operations\";\nimport { PrivateRoute } from \"./components/PrivateRoute\";\nimport { PublicRoute } from \"./components/PublicRoute\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n\n      <Switch>\n        <PublicRoute component={HomeView} exact path=\"/\" />\n        <PublicRoute component={RegisterView} path=\"/register\" />\n        <PublicRoute component={LoginView} path=\"/login\" />\n        <PrivateRoute component={ContactsView} path=\"/contacts\" />\n      </Switch>\n    </Container>\n  );\n};\n\nexport default App;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  //addContactRequest,\n  addContactSuccess,\n  //addContactError,\n  //deleteContactRequest,\n  deleteContactSuccess,\n  //deleteContactError,\n  changeFilter,\n  //fetchContactsRequest,\n  fetchContactsSuccess,\n  //fetchContactsError,\n} from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n  //  [toggleCompletedSuccess]: (state, { payload }) =>\n  //    state.map(todo => (todo.id === payload.id ? payload : todo)),\n});\n\n/*\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [toggleCompletedRequest]: () => true,\n  [toggleCompletedSuccess]: () => false,\n  [toggleCompletedError]: () => false,\n});\n*/\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\n//const error = createReducer(null, {});\n\nconst contactsReducer = combineReducers({\n  items,\n  filter,\n  //loading,\n  //error,\n});\n\nexport default contactsReducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport authOperations from \"./auth-operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n      //state = initialState;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nconst authReducer = authSlice.reducer;\n\nexport default authReducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\nimport authReducer from \"./auth/auth-slice\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n//import 'modern-normalize/modern-normalize.css';\nimport './styles/base.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__36VH0\"};"],"sourceRoot":""}